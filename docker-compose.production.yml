version: '3.8'

services:
  # Frontend Nuxt.js
  frontend:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: portfolio-frontend
    environment:
      - NUXT_HOST=0.0.0.0
      - NUXT_PORT=3000
      - API_URL=http://backend:3001
    depends_on:
      - backend
    networks:
      - portfolio-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:3000/"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 10s

  # Backend Express.js
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: portfolio-backend
    environment:
      - PORT=3001
      - FRONTEND_URL=https://votre-domaine.nc.me
    env_file:
      - ./backend/.env
    networks:
      - portfolio-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "node", "-e", "require('http').get('http://localhost:3001/api/health', (res) => { process.exit(res.statusCode === 200 ? 0 : 1) })"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 10s

  # Proxy Nginx pour HTTPS avec Let's Encrypt
  nginx:
    image: nginx:alpine
    container_name: portfolio-nginx
    ports:
      - "80:80"      # HTTP
      - "443:443"    # HTTPS
    volumes:
      - ./nginx/nginx.prod.conf:/etc/nginx/nginx.conf:ro
      - ./certbot/conf:/etc/letsencrypt:ro
      - ./certbot/www:/var/www/certbot:ro
    depends_on:
      - frontend
      - backend
    networks:
      - portfolio-network
    restart: unless-stopped

  # Certbot pour Let's Encrypt
  certbot:
    image: certbot/certbot
    container_name: portfolio-certbot
    volumes:
      - ./certbot/conf:/etc/letsencrypt
      - ./certbot/www:/var/www/certbot
    command: certonly --webroot -w /var/www/certbot --force-renewal --email votre-email@gmail.com -d votre-domaine.nc.me --agree-tos
    depends_on:
      - nginx

networks:
  portfolio-network:
    driver: bridge
